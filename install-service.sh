#!/bin/bash
# Full setup for nervous-efficient-rebel service

# Config variables
autogeneratedComment="This file is autogenerated by stanford-ner-service/ner-install.sh"

# Log to stderr
function log() {
    printf "ner-install|$1\n" >&2
}


if [ $# -eq 1 ]; then
    # If an argument is given, treat it as the target directory
    changeTo="$1"
    echo "Changing directory to $changeTo"
    cd "$changeTo"
else
    # More than 1 argument is invalid
    log "ERROR: Usage: install-service [target_directory]"
    exit 1
fi

# Global variables
# The directory to install to
workingDirectory="$(pwd)"

# Write server script
serverScript="$workingDirectory/nervous-efficient-rebel.sh"
log "Writing server script to $serverScript"
cat << EOF > $serverScript
#!/bin/sh

# $autogeneratedComment

exec node "$workingDirectory/src/app.js"
EOF

# Write service unit
serviceUnitName="nervous-efficient-rebeld"
serviceUnit="$workingDirectory/$serviceUnitName"
pidfile="/var/run/$serviceUnitName.pid"
log "Writing service unit to $serviceUnit"
cat << EOF > $serviceUnit
#!/bin/bash
#
# /etc/init.d/$serviceUnitName
#
# chkconfig: 235 20 80
# description: Stanford NER HTTP service daemon.
#

# $autogeneratedComment

[ -x $serverScript ] || exit 0

start() {
    echo "Starting $serviceUnitName"
    if [ -e $pidfile ]; then
        echo "$serviceUnitName is already running"
    else
        nohup $serverScript &
        echo \$! > $pidfile
        echo "$serviceUnitName started: \$(cat $pidfile)"
    fi
}

stop() {
    echo "Stopping $serviceUnitName"
    if [ -e $pidfile ]; then
        kill \`cat $pidfile\`
        rm -f $pidfile
        echo "$serviceUnitName stopped"
    else
        echo "$serviceUnitName is not running"
    fi
}

status() {
    if [ -e $pidfile ]; then
        echo "$serviceUnitName is running"
    else
        echo "$serviceUnitName is not running"
    fi
}

case "\$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    force-reload)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $serviceUnitName {start|stop|restart|force-reload|status}"
        exit 1
        ;;
esac
exit 0
EOF

# Make executable
log "Marking generated files as executable" 
chmod a+x "$serverScript" "$serviceUnit"

# Add service to system and enable
# Do not need to start, will be started either by user, restart or post-install hook
log "Installing service as $serviceUnitName"
cp "$serviceUnit" "/etc/init.d/"

log "Enabling service"
chkconfig --add "$serviceUnitName" 
chkconfig --level 235 "$serviceUnitName" on 

log "Installation complete: run with /etc/init.d/$serviceUnitName start"
